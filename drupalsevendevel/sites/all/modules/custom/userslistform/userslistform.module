<?php
function userslistform_menu() {
	$items = array ();
	$items ['userslistform'] = array (
			'title' => 'Hello World',
			'page callback' => 'userslistformpage',
			'page arguments' => array('list'),
			'access arguments' => array('administer users'),
	);
	
	
	$items ['userslist'] = array (
			'title' => 'Users List',
			'page callback' => 'userslistpage',
			'access arguments' => array('access content'),
	);
	
	return $items;
}



function userslistpage(){
	$build['userfilterform']=drupal_get_form('userfilter_form');
	$build['userslistform']=drupal_get_form('user_data');
	return $build;
}



//filter form
function userfilter_form(){
	$form['account_status']=array(
		'#type'=>'select',
		'#options'=>array('1'=>'active','0'=>'inactive'),
		'#default_value'=>$_SESSION['account_status']
	);
	
	$form['go']=array(
		'#type'=>'submit',
		'#value'=>'Go'
	);
	
	return $form;
}




function user_data() {

	$output = '';
	$output .= '<a href="' . base_path () . 'cruisecategory/add">Add Category</a>';
	$header = array (
			array (
					'data' => 'Id',
					'field' => 'cruise_category_id'
			),
			array (
					'data' => 'Name',
					'field' => 'cruise_category_name'
			),
			array (
					'data' => 'Actions'
			)
	);
	if (isset ( $_GET ['sort'] ) && isset ( $_GET ['order'] )) {
		if ($_GET ['sort'] == 'asc')
			$sort = 'ASC';
		else
			$sort = 'DESC';
	
		switch ($_GET ['order']) {
			case 'Id' :
				$order = 'cruise_category_id';
				break;
			case 'Name' :
				$order = 'name';
				break;
		}
	} else {
		$sort = 'ASC';
		$order = 'cruise_category_id';
	}
	
	$query = db_select ( "cruisecategory", "n" );
	$query->fields ( 'n', array (
			'cruise_category_id',
			'cruise_category_name'
	) );
	$query->orderBy ( $order, $sort );
	
	if($_SESSION['account_status']=='1'){
		$query->condition('status','1','=');
	}else if($_SESSION['account_status']=='0'){
		$query->condition('status','0','=');
	}
	
	
	$query = $query->extend ( 'TableSort' )->extend ( 'PagerDefault' )->limit ( 3 );
	$result = $query->execute ()->fetchAll ();
	
	global $base_url;
	$rows = array ();
	if (count ( $result ) > 0) {
		for($i = 0; $i < count ( $result ); $i ++) {
			$rows [] = array (
					$result [$i]->cruise_category_id,
					$result [$i]->cruise_category_name,
						
					'<a href="' . $base_url . '/cruisecategory/' . $result [$i]->cruise_category_id . '/edit">Edit |</a>
                <a href="' . $base_url . '/cruisecategory/' . $result [$i]->cruise_category_id . '/delete">Delete</a>'
			);
		}
	}
	
	$output .= '<div class="">';
	$output .= '<div class="">';
	
	$output .= '</div>';
	$output .= theme_table ( array (
			'header' => $header,
			'rows' => $rows,
			'attributes' => array (
					'class' => array (
							''
					)
			),
			'sticky' => true,
			'caption' => '',
			'colgroups' => array (),
			'empty' => t ( "No Records!" )
	) ) . theme ( 'pager' );
	
	$output .= '</div>';
	
	$form['mp']=array(
		'#type'=>'markup',
		'#markup'=>$output
	);
	return $form;
}























//data
function userfilter_form_submit($form, &$form_state) {
		$_SESSION['account_status']=$form_state['values']['account_status'];
		$form_state['redirect'] = 'userslist';
		return;
	}

function userslistformpage($callback_arg = '') {
	$op = isset($_POST['op']) ? $_POST['op'] : $callback_arg;
	$build['user_filter_form'] = drupal_get_form('user_filters_form');
	$build['user_admin_account'] = drupal_get_form('user_admin_accountss');
	
	return $build;
}



function user_filters_form() {
	$form['status']=array(
		'#type'=>'select',
		'#options'=>array('1'=>'active','0'=>'inactive'),
		'#default_value' =>$_SESSION['st'],
	);
	$form['submit'] = array(
			'#type' => 'submit',
			'#value' => 'Go',
	);
	drupal_add_library('system', 'drupal.form');
	return $form;
}



function user_filters_form_submit($form, &$form_state) {
	$_SESSION['st']=$form_state['values']['status'];
	$form_state['redirect'] = 'userslistform';
	return;
}


function user_admin_accountss() {

	$header = array(
			'username' => array('data' => t('Username'), 'field' => 'u.name'),
			'status' => array('data' => t('Status'), 'field' => 'u.status'),
			'roles' => array('data' => t('Roles')),
			'member_for' => array('data' => t('Member for'), 'field' => 'u.created', 'sort' => 'desc'),
			'access' => array('data' => t('Last access'), 'field' => 'u.access'),
			'operations' => array('data' => t('Operations')),
	);

	$query = db_select('users', 'u');
	$query->condition('status',$_SESSION['st'],'=');

	$count_query = clone $query;
	$count_query->addExpression('COUNT(u.uid)');

	$query = $query->extend('PagerDefault')->extend('TableSort');
	$query
	->fields('u', array('uid', 'name', 'status', 'created', 'access'))
	->limit(5)
	->orderByHeader($header)
	->setCountQuery($count_query);
	$result = $query->execute();


	$destination = drupal_get_destination();

	$status = array(t('blocked'), t('active'));
	$roles = array_map('check_plain', user_roles(TRUE));
	$accounts = array();
	foreach ($result as $account) {
		$users_roles = array();
		$roles_result = db_query('SELECT rid FROM {users_roles} WHERE uid = :uid', array(':uid' => $account->uid));
		foreach ($roles_result as $user_role) {
			$users_roles[] = $roles[$user_role->rid];
		}
		asort($users_roles);

		$options[$account->uid] = array(
				'username' => theme('username', array('account' => $account)),
				'status' =>  $status[$account->status],
				'roles' => theme('item_list', array('items' => $users_roles)),
				'member_for' => format_interval(REQUEST_TIME - $account->created),
				'access' =>  $account->access ? t('@time ago', array('@time' => format_interval(REQUEST_TIME - $account->access))) : t('never'),
				'operations' => array('data' => array('#type' => 'link', '#title' => t('edit'), '#href' => "user/$account->uid/edit", '#options' => array('query' => $destination))),
		);
	}

	$form['accounts'] = array(
			'#type' => 'tableselect',
			'#header' => $header,
			'#options' => $options,
			'#empty' => t('No people available.'),
	);
	$form['pager'] = array('#markup' => theme('pager'));

	return $form;
}

