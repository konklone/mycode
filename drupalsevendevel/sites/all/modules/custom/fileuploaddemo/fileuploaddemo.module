<?php
function multifile_upload_form($form, &$form_state) {
	$form = array ();
	
	$form ['file'] = array (
			
			'#type' => 'file',
		
			'#name' => 'files[]',
			
			'#title' => t ( 'Upload some multifile' ),
			
			'#description' => t ( 'You are allow to upload jpg, jpeg, png and gif, 10MB Max Size' ),
			
			'#attributes' => array (
					'multiple' => 'multiple' 
			) 
	);
	
	$form ['submit'] = array (
			
			'#type' => 'submit',
			
			'#value' => t ( 'Upload' ) 
	);
	
	return $form;
}
function multifile_upload_form_validate($form, &$form_state) {
	
	// Save multiple files
	$num_files = count ( $_FILES ['files'] ['name'] );
	
	for($i = 0; $i < $num_files; $i ++) {
		
		$file = file_save_upload ( $i, array (
				
				'file_validate_is_image' => array (),
				
				'file_validate_extensions' => array (
						'png gif jpg jpeg' 
				) 
		)
		 );
		
		if ($file) {
			
			if ($file = file_move ( $file, 'public://' )) {
				
				$form_state ['values'] ['file'] [$i] = $file;
			} 

			else {
				
				form_set_error ( 'file', t ( 'Failed to write the uploaded file the site\'s file folder.' ) );
			}
		} 

		else {
			
			form_set_error ( 'file', t ( 'No file was uploaded.' ) );
		}
	}
}
function multifile_upload_form_submit($form, &$form_state) {
	if (is_array ( $form_state ['values'] ['file'] )) {
		
		// Make sure we keep our previously uploaded images
		
		foreach ( $form_state ['values'] ['file'] as $file ) {
			
			$new_file = file_load ( $file->fid );
			
			// Fetch the various parameters of the images like height, width etc..
			
			// Though this is not required on case of other files you can straight away neglect it.
			
			$file_info = image_get_info ( $file->uri );
			
			// Here you will get an individual file object.
			
			// You can now manipulate as per your requirement and attach with nodes too.
		}
	}
	
	drupal_set_message ( t ( 'Upload successful' ) );
}